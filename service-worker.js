!function(){"use strict";const e=[{pattern:/^\/$/}],t=["client/client.78b20315.js","client/index.1f2dfa1a.js","client/client.91340714.js"].concat(["service-worker-index.html",".DS_Store","favicon.png","global.css","logo-192.png","logo-512.png","manifest.json"]),n=new Set(t);self.addEventListener("install",e=>{e.waitUntil(caches.open("cache1587819637330").then(e=>e.addAll(t)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const t of e)"cache1587819637330"!==t&&await caches.delete(t);self.clients.claim()}))}),self.addEventListener("fetch",t=>{if("GET"!==t.request.method||t.request.headers.has("range"))return;const s=new URL(t.request.url);s.protocol.startsWith("http")&&(s.hostname===self.location.hostname&&s.port!==self.location.port||(s.host===self.location.host&&n.has(s.pathname)?t.respondWith(caches.match(t.request)):s.origin===self.origin&&e.find(e=>e.pattern.test(s.pathname))?t.respondWith(caches.match("/service-worker-index.html")):"only-if-cached"!==t.request.cache&&t.respondWith(caches.open("offline1587819637330").then(async e=>{try{const n=await fetch(t.request);return e.put(t.request,n.clone()),n}catch(n){const s=await e.match(t.request);if(s)return s;throw n}}))))})}();
